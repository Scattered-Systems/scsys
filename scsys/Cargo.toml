[package]
build = "build.rs"
name = "scsys"

authors.workspace = true
categories.workspace = true
description.workspace = true
edition.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[package.metadata.docs.rs]
all-features = false
features = ["full"]
rustc-args = [ "--cfg", "docsrs" ]
version = "v{{version}}"

[package.metadata.release]
no-dev-version = true
tag-name = "v{{version}}"

[lib]
crate-type = [
    "cdylib",
    "rlib",
    "staticlib"
]
bench = true
doc = true
doctest = true
test = true

[dependencies]
scsys-core = { workspace = true }
scsys-config = { optional = true, workspace = true }
scsys-crypto = { optional = true, workspace = true }
scsys-derive = { optional = true, workspace = true }
scsys-macros = { optional = true, workspace = true }
scsys-traits = { optional = true, workspace = true }
scsys-util = { optional = true, workspace = true }

[dev-dependencies]
anyhow = { features = ["std"], workspace = true }
criterion = { features = ["plotters"], workspace = true }
lazy_static = { workspace = true }
serde = { features = ["std"], workspace = true }
serde_json = { features = ["std"], workspace = true }

[features]
default = [
    "derive",
    "macros",
    "std",
    "traits",
    "utils",
]

full = [
    "default",
    "config",
    "crypto",
    "hash",
    "json",
    "rand",
    "serde",
    "time",
]

# ************* [FF:Features] *************
config = [
    "dep:scsys-config",
    "scsys-config?/default",
    "std"
]

crypto = [ "dep:scsys-crypto" ]

derive = [ "dep:scsys-derive" ]

hash = [
    "crypto",
    "scsys-crypto?/hash",
    "std",
]

macros = [ "dep:scsys-macros" ]

traits = [ "dep:scsys-traits" ]

utils = [ "dep:scsys-util" ]

# ************* [FF:Environments] *************
std = [
    "scsys-core/std",
    "scsys-crypto?/std",
    "scsys-traits?/std",
    "scsys-util?/std",
]

wasi = [
    "scsys-core/wasi",
    "scsys-config?/wasi",
    "scsys-crypto?/wasi",
    "scsys-traits?/wasi",
    "scsys-util?/wasi",
]

wasm = [
    "scsys-core/wasm",
    "scsys-config?/wasm",
    "scsys-crypto?/wasm",
    "scsys-traits?/wasm",
    "scsys-util?/wasm",
]

# ************* [FF:Dependencies] *************
alloc = [
    "scsys-core/alloc",
    "scsys-crypto?/alloc",
    "scsys-traits?/alloc",
    "scsys-util?/alloc",
]

anyhow = [
    "scsys-core/anyhow",
    "scsys-config?/anyhow",
    "scsys-crypto?/anyhow",

]

blake3 = [
    "crypto",
    "scsys-crypto?/blake3",
]

chrono = [
    "scsys-core/chrono",
    "scsys-crypto?/chrono",
]

json = [
    "alloc",
    "scsys-core/json",
    "scsys-config?/json",
    "scsys-crypto?/json",
    "scsys-util?/json",
    "serde",
    "serde_json",
]

rand = [
    "scsys-core/rand",
    "scsys-crypto?/rand",
]

rng = [
    "scsys-core/rng",
    "scsys-crypto?/rng",
]

serde = [
    "scsys-core/serde",
    "scsys-crypto?/serde",
    "scsys-util?/serde",
]

serde_json = [
    "scsys-core/serde_json",
    "scsys-config?/serde_json",
    "scsys-crypto?/serde_json",
    "scsys-util?/serde_json",
]

time = [
    "scsys-core/time",
    "scsys-crypto?/time",
]

tracing = [
    "scsys-core/tracing",
    "scsys-config?/tracing",
    "scsys-crypto?/tracing",
    "scsys-util?/tracing",
]

tracing-subscriber = [
    "scsys-config?/tracing-subscriber",
    "tracing",
]

wasm-bindgen = [
    "scsys-core/wasm-bindgen",
]

# ************* [Benchmarks] *************
[[bench]]
harness = false
name = "default"
path = "benches/default.rs"
required-features = ["std"]

# ************* [Examples] *************
[[example]]
name = "derive"
required-features = [ 
    "derive", 
    "json",
]


# ************* [Unit Tests] *************
[[test]]
name = "derive"
required-features = [ 
    "derive", 
    "json",
]
