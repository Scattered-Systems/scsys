[package]
build = "build.rs"
description = "common configuration routines and schemas used throughout the ecosystem"
name = "scsys-config"

authors.workspace = true
categories.workspace = true
edition.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]
bench = false
doc = true
doctest = true
test = true

[dependencies]
# sdk
scsys-core = { workspace = true }
# crate-specific
clap = { default-features = false, optional = true, version = "4" }
config = { default-features = false, optional = true, version = "0.15" }
glob = { optional = true, workspace = true }
url = { optional = true, workspace = true }
# error handling
anyhow = { optional = true, workspace = true }
thiserror = {workspace = true }
# data & serialization
serde = { optional = true, workspace = true }
serde_derive = { optional = true, workspace = true }
serde_json = { optional = true, workspace = true }
# macros
smart-default = { workspace = true }
strum = { workspace = true }
# logging
tracing = { optional = true, workspace = true }
tracing-subscriber = { optional = true, workspace = true }
# files

[package.metadata.docs.rs]
all-features = false
features = ["full"]
rustc-args = [ "--cfg", "docsrs" ]
version = "v{{version}}"

[package.metadata.release]
no-dev-version = true
tag-name = "{{version}}"

[features]
default = [
    "std",
    "config",
    "async",
    "convert-case",
    "ini",
    "json",
    "json5",
    "ron",
    "toml",
    "url",
    "yaml",
]

full = [
    "default",
    "anyhow",
    "clap",
    "glob",
    "tracing",
    "tracing-subscriber",
]

std = [
    "anyhow?/std",
    "clap?/std",
    "scsys-core/std",
    "serde?/std",
    "serde_json?/std",
    "strum/std",
    "thiserror/std",
    "tracing?/std",
    "tracing-subscriber?/std",
    "url?/std",
]

# ************* [FF:Dependencies] *************
anyhow = [
    "dep:anyhow",
    "scsys-core/anyhow",
]

async = ["config?/async"]

clap = [
    "dep:clap",
    "clap?/color",
    "clap?/derive",
    "clap?/error-context",
    "clap?/env",
    "clap?/help",
    "clap?/string",
    "clap?/suggestions",
    "clap?/usage",
    "std",
]

config = [
    "dep:config",
    "std",
]

glob = ["dep:glob"]

serde = [
    "dep:serde",
    "dep:serde_derive",
    "scsys-core/serde",
    "tracing-subscriber?/serde",
    "url?/serde",
]

serde_json = [
    "dep:serde_json", 
    "config?/serde_json",
    "scsys-core/json",
    "serde",
]

tracing = [
    "dep:tracing",
    "scsys-core/tracing",
]

tracing-subscriber = [
    "dep:tracing-subscriber",
    "tracing",
    "tracing-subscriber?/ansi",
    "tracing-subscriber?/env-filter",
    "tracing-subscriber?/fmt",
]

url = ["dep:url"]

# ************* [FF:config] *************
convert-case = ["config?/convert-case"]

ini = ["config?/ini"]

json = [
    "serde_json",
    "config?/json",
]

json5 = ["config?/json5"]

ron = ["config?/ron"]

toml = ["config?/toml"]

yaml = ["config?/yaml"]

# ************* [Unit Tests] *************
[[test]]
name = "default"