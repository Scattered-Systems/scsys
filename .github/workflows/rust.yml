name: rust

concurrency:   
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-C panic=abort"

on:
  pull_request:
    branches: [ main, master ]
    types: [ opened, synchronize, reopened ]
  push:
    branches: [ main, master ]
    tags: [ latest, v*, "*-nightly" ]
  repository_dispatch:
    types: [ rust ]
  workflow_dispatch:

permissions: 
  contents: read
  deployments: read

jobs:
  workspace:
    strategy:
      fail-fast: false
      matrix:
        os:  [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
      - 
        name: Build
        run: cargo build --locked --release --workspace --all-features
      - 
        name: Test (all-features)
        run: cargo test --locked --release --workspace --all-features
      - 
        continue-on-error: true
        name: Test (no_std)
        run: cargo test --locked --release --workspace --no-default-features
      - 
        name: Benchmark
        run: cargo bench --verbose --workspace --features full
